form {
    height: 100%;

    * {
        color: white;
    }
}

//----------------------------------  basic style for each form page ---------------------------------- 
.form-page {
    height: 100%; //make sure each form-page take up the whole height of the parent container
    // by default when a form-page is shown, it is set to be flexbox
    flex-direction: column;
    justify-content: space-between;

    .form-input-container {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        flex-basis: 33%;
        padding: 0 5%;
        gap: 0 1rem;

        .form-item {
            height: 5rem;
            flex-grow: 1;
            color: $black;
            display: inline-flex;
            position: relative;
            align-items: center;

            &>label {
                font-size: 1.5rem;
                margin-right: 1rem;
            }

            &>input {
                flex-grow: 1;
            }

        }

        .form-text {
            //align the text to the vertical center
            margin: auto 0;
            font-size: 1.5rem;
            display: inline-block;
            align-self: center;

            // &:not(:first-child) {
            //     margin-left: 1rem;
            // }
        }
    }

    .progress-container {
        display: flex;
        justify-content: space-between;
        padding: 0 4%;

        .progress-text {
            display: flex;
            flex-direction: column;
            min-width: 300px;

            h2 {
                color: $accent;
                font-size: 1rem;
                margin-bottom: -1rem;
            }

            p {

                font-size: 6rem;
                font-weight: 300;
            }
        }

        .progress-button {
            padding: 3rem 0;
            //take up all the remaining area of the progress-container
            flex: 1;
            //move the button at the center of the progress-container
            align-self: flex-end;

            display: flex;
            justify-content: space-between;

            //evenly distribute space for each child
            * {
                flex: 1;
            }

            &>*:last-child {
                justify-content: flex-end;
            }
        }

    }

    // responsive breakpoint
    @media screen and (max-width: 480px) {

        //.form-page styling
        & {
            .progress-container {
                padding:8%;
                flex-wrap: wrap;

                .progress-text {
                    min-width: 0;
                    flex-basis: 100%;
                    margin: 0 auto;
                }

                .progress-button {
                    padding: 0;
                }
            }
        }
    }

}

//control the classname to show and hide different pages
.msf-hide {
    display: none;
}

.msf-show {
    display: flex;
    //flexbox helps to better manage the layout flow
}

//hide the visibility only, it is still there to take up the space
.msf-visually-hide {
    visibility: hidden;
}


//----------------------------------  styling different input field ---------------------------------- 

.is-required {

    //add a asterisk at the end of all required input
    //and put it at the top-right corner
    &::after {
        content: "*";
        color: $accent;
        font-size: 1.5rem;
        position: absolute;
        right: -10px;
        top: 16px;

    }
    @media screen and (max-width: 480px){
        &::after {
            font-size: 2rem;
            top: 0;
        }
    }
}

//styling the text input field - more specific selectors
input[type=text],
input[type="text"],
textarea {
    background-color: transparent !important;
    border: none !important;
    border-bottom: 1px solid $gray !important;
    margin: 4px 0 !important;
    padding: 4px 0 !important;
    color: white !important;
    font-size: 1rem !important;
    width: 100% !important;

    //make the placeholder text all uppercase without affecting user input
    text-transform: none;

    &::placeholder {
        text-transform: uppercase !important;
        letter-spacing: 0.01rem !important;
        color: $gray !important;
        font-size: 1rem !important;
    }

    //change the focus state
    &:focus {
        border-bottom: 1px solid $accent !important;
        transition: 200ms all ease-in-out !important;
        outline: none !important;
    }
}

// Additional specific selectors for form inputs
.form-item input[type=text],
.form-item input[type="text"],
.form-item textarea {
    background-color: transparent !important;
    border: none !important;
    border-bottom: 1px solid $gray !important;
    margin: 4px 0 !important;
    padding: 4px 0 !important;
    color: white !important;
    font-size: 1rem !important;
    width: 100% !important;

    &::placeholder {
        text-transform: uppercase !important;
        letter-spacing: 0.01rem !important;
        color: $gray !important;
        font-size: 1rem !important;
    }

    &:focus {
        border-bottom: 1px solid $accent !important;
        transition: 200ms all ease-in-out !important;
        outline: none !important;
    }
}

// Even more specific selectors for production
.form-page .form-item input[type=text],
.form-page .form-item input[type="text"],
.form-page .form-item textarea {
    background-color: transparent !important;
    border: none !important;
    border-bottom: 1px solid $gray !important;
    margin: 4px 0 !important;
    padding: 4px 0 !important;
    color: white !important;
    font-size: 1rem !important;
    width: 100% !important;
    font-family: inherit !important;
    outline: none !important;

    &::placeholder {
        text-transform: uppercase !important;
        letter-spacing: 0.01rem !important;
        color: $gray !important;
        font-size: 1rem !important;
    }

    &:focus {
        border-bottom: 1px solid $accent !important;
        outline: none !important;
        transition: all 0.2s ease-in-out !important;
    }
}

// Most specific selectors for each form
#coffee-form input[type=text],
#gadget-form input[type=text],
#brew-form input[type=text],
#coffee-form textarea,
#gadget-form textarea,
#brew-form textarea {
    background-color: transparent !important;
    border: none !important;
    border-bottom: 1px solid $gray !important;
    margin: 4px 0 !important;
    padding: 4px 0 !important;
    color: white !important;
    font-size: 1rem !important;
    width: 100% !important;
    font-family: inherit !important;
    outline: none !important;

    &::placeholder {
        text-transform: uppercase !important;
        letter-spacing: 0.01rem !important;
        color: $gray !important;
        font-size: 1rem !important;
    }

    &:focus {
        border-bottom: 1px solid $accent !important;
        outline: none !important;
        transition: all 0.2s ease-in-out !important;
    }
}

//styling the number input field
input[type=number] {
    width: 4rem !important;
    margin: 4px 0 !important;
    border: 1px solid $gray !important;
    padding: 4px 8px !important;
    background-color: transparent !important;

    &:focus {
        border: 1px solid $accent !important;
        transition: 200ms all ease-in-out;
    }

    &::placeholder {
        text-transform: uppercase;
        letter-spacing: 0.01rem;
        color: $gray;
        font-size: 1rem;
    }
}

input[type=date] {
    margin: 4px 0 !important;
    background-color: transparent !important;
    border: none !important;
    min-width: 8rem !important;
    border-bottom: 1px solid gray !important;
    text-transform: uppercase !important;
    color: white !important;

    &:invalid::-webkit-datetime-edit {
        color: $gray;
    }

    &:focus {
        border-bottom: 1px solid $accent !important;
        transition: 200ms all ease-in-out;
    }

    //credit to https://stackoverflow.com/questions/14946091/are-there-any-style-options-for-the-html5-date-picker
    &::-webkit-calendar-picker-indicator {
        filter: invert(100%);
    }

    // turn the indicator button to white
}

input[type=file] {
    max-width: 20ch;
    margin: 0;
}

//styling customised radio button, credit to https://moderncss.dev/pure-css-custom-styled-radio-buttons/
.radio-wrapper {
    margin: 0 1rem;

    .radio-container {
        display: grid;
        grid-template-columns: 1em auto;
        gap: 1rem;
        align-items: center;
        font-size: 1rem;

        input[type="radio"] {
            // disable default radio button
            appearance: none;
            background-color: #fff;
            margin: 0;


            // custom unchcekd radio style
            color: $black;
            width: 1rem;
            height: 1rem;
            border: 1px solid $black;
            border-radius: 50%;


            // align before state to the horizontal and vertical center
            display: grid;
            place-content: center;

            &::before {
                content: "";
                width: 0.5rem;
                height: 0.5rem;
                border-radius: 50%;
                transform: scale(0);
                transition: 120ms transform ease-in-out;
                box-shadow: inset 1em 1em $accent;
            }

            &:checked::before {
                transform: scale(1);
            }
        }
    }
}

//styling custom dropdown select
/*the container must be positioned relative:*/
.custom-select {
    margin: 4px 0;
    width: 100%;
    position: relative;
    display: inline-block;

    &>select {
        display: none;
        /*hide original SELECT element:*/
    }

    .select-selected {
        background-color: $black;
        border: 1px solid $gray;

        &:hover {
            border-color: $accent;
        }
    }

    /*style the arrow inside the select element:*/
    .select-selected:after {
        position: absolute;
        top: 35%;
        right: 10px;
        width: 0;
        height: 0;

        //draw an arrow using css: https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_arrows
        content: "";
        border: solid white;
        border-width: 0 1px 1px 0;
        padding: 3px;
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
        transition: all 100ms ease-in;
    }

    /*point the arrow upwards when the select box is open (active):*/
    .select-selected.select-arrow-active:after {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
        top: 45%;
        transition: all 100ms ease-out;
    }

    /*set the styling and height for the list when the select box is open (active), the overflow-y property controls the scrolling:*/
    .select-items {
        border: 1px solid $gray;
        border-top: none;
        height: 20rem;
        overflow-y: auto;
        position: absolute;
        background-color: $black;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99;

        & div {
            &:not(:last-child) {
                border-bottom: 1px solid $gray;
            }
        }
    }

    /*style the items (options), including the selected item:*/
    .select-items div,
    .select-selected {
        color: white;
        padding: 4px 8px;
        cursor: pointer;
        user-select: none;
    }

    /*hide the items when the select box is closed:*/
    .select-hide {
        display: none;
    }

    .select-items div:hover,
    .same-as-selected {
        color: $accent;
        background-color: rgba(0, 0, 0, 0.1);
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
    }

    /* scrollbar width */
    .select-items::-webkit-scrollbar {
        width: 10px;
    }

    /* scrollbar track */
    .select-items::-webkit-scrollbar-track {
        border-left: 1px solid white;
        border-right: 1px solid white;
    }

    /* scrollbar handle */
    .select-items::-webkit-scrollbar-thumb {
        background: white;
        border-radius: 1px;
    }

    /* scrollbar handle on hover */
    .select-items::-webkit-scrollbar-thumb:hover {
        background: $accent;
    }
}

//styling the tag text input area
.tag-container {
    label {
        flex-shrink: 0;
    }
}

//styling the star rating
/* We use display: flex to create a row of stars, otherwise, the stars will appear vertically and inline (if that's what you want by all means go ahead) */
.heart-rating {
    display: flex;
    gap: 1rem;

    input {
        visibility: hidden;
        display: none;
    }

    label {
        width: 1.5rem;
        height: 1.5rem;
        cursor: pointer;

        &:hover {
            svg path {
                stroke: white !important;
            }
        }

        &:active {
            transform: scale(1.2);
            transition: all 300ms ease-out;
        }

        svg {
            transition: all 200ms ease-in;
            fill: $accent;

            &.unfill-heart {
                fill: none;

                path {
                    stroke: $gray;
                }
            }
        }

    }
}

//remove the default autofill background
/* Change Autocomplete styles in Chrome*/
//Code reference from: https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus {
    -webkit-text-fill-color: white;
    caret-color: white; //change the cursor color to white as well
    -webkit-box-shadow: 0 0 0px 1000px $black inset; //change the background color
    transition: background-color 5000s ease-in-out 0s;
}