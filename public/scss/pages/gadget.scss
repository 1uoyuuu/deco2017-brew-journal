// Glide.js styles are imported directly in HTML

#gadget .content {
    // this is to make sure that the glider takes up the whole content space
    flex-direction: column;
    justify-content: center;
    margin: auto 2%;
}

#gadget-carousel {

    li.glide__slide {
        //make sure it has the same height as the parent container
        height: inherit;
        min-height: 400px; // Increased for larger square images
    }

    .carousel-item {
        height: 100%;
        min-height: 400px; // Increased for larger square images
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center; // Center the content vertically
        border: 1px solid white;
        padding: 5%;
        position: relative;
        .flex-row {
            width: 100%;
            display: flex;
            justify-content: space-between;
    
        }
        p {
            font-size: 1.5rem;
            text-transform: capitalize;
        }
        img {
            flex: 1;
            border: 2vh solid white;
            object-fit: cover; // Changed from contain to cover for better square cropping
            width: 100%; // Fill the available width
            aspect-ratio: 1 / 1; // Creates perfect square aspect ratio
            margin: auto;
            border-radius: 0; // Ensure square corners
        }
        .gadget-delete {
            display: none;
            
        }
        &:hover {
            .gadget-delete {
                z-index: 999;//make sure the button is at the top for us to see
                display: block;
                //center the delete button without the translate
                //translate will disrupt the scale animation
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                margin: auto;
                &:hover {
                    //blur the image when hovering on the delete button
                    & + * {
                        transition: all 0.2s ease-in;
                        filter: blur(5px);
                    }
                }
            }
        }
    }
}


//some independent styling for the gadget form
#gadget-form {

    & .form-page {
        justify-content: flex-end;
        gap: 5rem;

        //adjust the first page of the gadget form
        &:first-child {
            .form-item {
                gap: 2rem;
                height: 10rem;
                & > *:first-child {
                    align-self: flex-start;
                }
                .radio-wrapper {
                    display: flex;
                    gap: 2rem;
                    .radio-text {
                        font-size: 2.5rem;
                    }
                }
            }
        }
    }
}



//------------------------------------------- RESPONSIVE BREAKPOINT -------------------------------------------
@media screen and (max-width: 480px) {
    #gadget .grid-container {
        height: 80vh;
        p {
            font-size: 2rem;
        }
    }

    #gadget-form {
        .form-page {
            &:first-child {
                .form-item {
                    flex-direction: column;
                }
            }
            .form-input-container {
                padding: 0 8%;
            }
            .form-item:not(:last-child) {
                width: 100%;

                input {
                    flex-grow: 1;
                }
                
                
            }

        }
    }
}